# -*- coding: utf-8 -*-
# Generated by Django 1.10.5 on 2017-02-22 01:24
from __future__ import unicode_literals

import autoslug.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('nucleo', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='MemoriaInExtenso',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=255, unique=True)),
                ('slug', autoslug.fields.AutoSlugField(editable=False, populate_from='titulo', unique=True)),
                ('descipcion', models.TextField(blank=True)),
                ('fecha', models.DateField()),
                ('pagina_inicio', models.PositiveIntegerField()),
                ('pagina_fin', models.PositiveIntegerField()),
                ('issn', models.SlugField(blank=True, max_length=20)),
                ('url', models.URLField(blank=True)),
                ('agradecimientos', models.ManyToManyField(blank=True, related_name='memoria_in_extenso_agradecimientos', to=settings.AUTH_USER_MODEL)),
                ('autores', models.ManyToManyField(related_name='memoria_in_extenso_autores_externos', to=settings.AUTH_USER_MODEL)),
                ('ciudad', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nucleo.Ciudad')),
                ('editores', models.ManyToManyField(blank=True, related_name='memoria_in_extenso_editores', to=settings.AUTH_USER_MODEL)),
                ('evento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nucleo.Evento')),
                ('indices', models.ManyToManyField(blank=True, related_name='memoria_in_extenso_indices', to='nucleo.Indice')),
                ('pais_origen', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nucleo.Pais')),
                ('proyectos', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nucleo.Proyecto')),
            ],
            options={
                'verbose_name': 'Memoria in extenso',
                'verbose_name_plural': 'Memorias in extenso',
            },
        ),
        migrations.CreateModel(
            name='OrganizacionEventoAcademico',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descipcion', models.TextField(blank=True)),
                ('responsabilidad', models.CharField(choices=[('COORDINADOR', 'Coordinador general'), ('COMITE', 'Comité organizador'), ('AYUDANTE', 'Ayudante'), ('TECNICO', 'Apoyo técnico'), ('OTRO', 'Otro')], max_length=30)),
                ('numero_ponentes', models.PositiveIntegerField()),
                ('numero_asistentes', models.PositiveIntegerField()),
                ('ambito', models.CharField(choices=[('INSTITUCIONAL', 'Institucional'), ('REGIONAL', 'Regional'), ('NACIONAL', 'Nacional'), ('INTERNACIONAL', 'Internacional'), ('OTRO', 'Otro')], max_length=20)),
                ('evento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nucleo.Evento')),
                ('tags', models.ManyToManyField(blank=True, related_name='organizacion_evento_academico_tags', to='nucleo.Tag')),
            ],
            options={
                'verbose_name': 'Organización de evento académico',
                'verbose_name_plural': 'Organización de eventos académicos',
            },
        ),
        migrations.CreateModel(
            name='ParticipacionEventoAcademico',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=255)),
                ('slug', autoslug.fields.AutoSlugField(editable=False, populate_from='titulo', unique=True)),
                ('descipcion', models.TextField(blank=True)),
                ('resumen_publicado', models.BooleanField(default=False)),
                ('ambito', models.CharField(choices=[('INSTITUCIONAL', 'Institucional'), ('REGIONAL', 'Regional'), ('NACIONAL', 'Nacional'), ('INTERNACIONAL', 'Internacional'), ('OTRO', 'Otro')], max_length=20)),
                ('por_invitacion', models.BooleanField(default=False)),
                ('ponencia_magistral', models.BooleanField(default=False)),
                ('autores', models.ManyToManyField(related_name='participacion_evento_academico_autores', to=settings.AUTH_USER_MODEL)),
                ('evento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nucleo.Evento')),
                ('tags', models.ManyToManyField(blank=True, related_name='participacion_evento_academico_tags', to='nucleo.Tag')),
            ],
            options={
                'verbose_name': 'Participación en evento académico',
                'verbose_name_plural': 'Participación en eventos académicos',
            },
        ),
        migrations.CreateModel(
            name='PrologoLibro',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descipcion', models.TextField(blank=True)),
                ('pagina_inicio', models.PositiveIntegerField()),
                ('pagina_fin', models.PositiveIntegerField()),
                ('url', models.URLField(blank=True)),
                ('autor_prologo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('autores', models.ManyToManyField(blank=True, related_name='prologo_libro_autores', to=settings.AUTH_USER_MODEL)),
                ('coordinadores', models.ManyToManyField(blank=True, related_name='prologo_libro_coordinadores', to=settings.AUTH_USER_MODEL)),
                ('editores', models.ManyToManyField(blank=True, related_name='prologo_libro_editores', to=settings.AUTH_USER_MODEL)),
                ('libro', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prologo_libro_libro', to='nucleo.Libro')),
                ('tags', models.ManyToManyField(blank=True, related_name='prologo_libro_tags', to='nucleo.Tag')),
            ],
            options={
                'verbose_name': 'Prólogo de libro',
                'verbose_name_plural': 'Prólogos de libros',
            },
        ),
        migrations.CreateModel(
            name='Resena',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo_resena', models.CharField(max_length=255, unique=True)),
                ('tipo_publicacion', models.CharField(choices=[('LIBRO', 'Libro'), ('REVISTA', 'Revista'), ('OTRO', 'Otro')], max_length=20)),
                ('volumen', models.CharField(blank=True, max_length=10)),
                ('slug', autoslug.fields.AutoSlugField(editable=False, populate_from='titulo_resena', unique=True)),
                ('descipcion', models.TextField(blank=True)),
                ('pagina_inicio', models.PositiveIntegerField()),
                ('pagina_fin', models.PositiveIntegerField()),
                ('url', models.URLField(blank=True)),
                ('autor_resena', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('autores', models.ManyToManyField(blank=True, related_name='resena_autores', to=settings.AUTH_USER_MODEL)),
                ('coordinadores', models.ManyToManyField(blank=True, related_name='resena_coordinadores', to=settings.AUTH_USER_MODEL)),
                ('editores', models.ManyToManyField(blank=True, related_name='resena_editores', to=settings.AUTH_USER_MODEL)),
                ('libro', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='resena_libro', to='nucleo.Libro')),
                ('libros', models.ManyToManyField(blank=True, related_name='resena_libros', to='nucleo.Libro')),
                ('revista', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='resena_revista', to='nucleo.Revista')),
                ('revistas', models.ManyToManyField(blank=True, related_name='resena_revistas', to='nucleo.Revista')),
                ('tags', models.ManyToManyField(blank=True, related_name='resena_tags', to='nucleo.Tag')),
            ],
            options={
                'verbose_name': 'Reseña de libro',
                'verbose_name_plural': 'Reseñas de libros',
            },
        ),
    ]
