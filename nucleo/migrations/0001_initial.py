# -*- coding: utf-8 -*-
# Generated by Django 1.11.5 on 2017-09-25 05:48
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import sortedm2m.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('descripcion', models.TextField(blank=True, verbose_name='Semblanza')),
                ('tipo', models.CharField(choices=[('INVESTIGADOR', 'Investigador'), ('ADMINISTRATIVO', 'Administrativo'), ('TECNICO', 'Técnico'), ('OTRO', 'Otro')], default='OTRO', max_length=30)),
                ('fecha_nacimiento', models.DateField(blank=True, null=True)),
                ('rfc', models.SlugField(blank=True, max_length=20)),
                ('direccion', models.CharField(blank=True, max_length=255)),
                ('direccion_continuacion', models.CharField(blank=True, max_length=255)),
                ('telefono', models.SlugField(blank=True, max_length=20)),
                ('celular', models.SlugField(blank=True, max_length=20)),
                ('url', models.URLField(blank=True, null=True)),
                ('sni', models.PositiveSmallIntegerField(default=0)),
                ('pride', models.CharField(choices=[('-', '-'), ('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D')], default='-', max_length=2)),
                ('ingreso_unam', models.DateField(blank=True, null=True)),
                ('ingreso_entidad', models.DateField(blank=True, null=True)),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='avatares')),
            ],
            options={
                'ordering': ['first_name', 'last_name'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AreaConocimiento',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=255, unique=True)),
                ('categoria', models.CharField(choices=[('LSBM', 'Life Sciences and Biomedicine'), ('PHYS', 'Physical Sciences'), ('TECH', 'Technology'), ('ARTH', 'Arts and Humanities'), ('SS', 'Social Sciences'), ('ZTRA', 'Otra')], max_length=20)),
                ('descripcion', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': 'Área General de Conocimiento',
                'verbose_name_plural': 'Áreas Generales de Conocimiento',
                'ordering': ['categoria', 'nombre'],
            },
        ),
        migrations.CreateModel(
            name='AreaEspecialidad',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=255, unique=True)),
                ('descripcion', models.TextField(blank=True)),
                ('area_conocimiento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nucleo.AreaConocimiento')),
            ],
            options={
                'verbose_name': 'Área de especialidad de WOS y otras entidades',
                'verbose_name_plural': 'Áreas de especialidades de WOS y otras entidades',
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='Asignatura',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=255, unique=True)),
                ('descripcion', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Beca',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=200, unique=True)),
                ('descripcion', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Cargo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=255)),
                ('descripcion', models.TextField(blank=True)),
                ('tipo_cargo', models.CharField(choices=[('ACADEMICO', 'Académico'), ('ADMINISTRATIVO', 'Administrativo'), ('OTRO', 'Otro')], max_length=20)),
            ],
            options={
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='Ciudad',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name_plural': 'Ciudades',
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='Coleccion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=255, unique=True)),
                ('descripcion', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': 'Colección',
                'verbose_name_plural': 'Colecciones',
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='Departamento',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=255)),
                ('descripcion', models.TextField(blank=True)),
            ],
            options={
                'ordering': ['nombre', 'dependencia'],
            },
        ),
        migrations.CreateModel(
            name='Dependencia',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=255)),
                ('descripcion', models.TextField(blank=True)),
                ('subsistema_unam', models.CharField(choices=[('DIFUSION_CULTURAL', 'Subsistema de Difusión Cultural'), ('ESTUDIOS_POSGRADO', 'Subsistema de Estudios de Posgrado'), ('HUMANIDADES', 'Subsistema de Humanidades'), ('INVESTIGACION_CIENTIFICA', 'Subsistema de Investigación Científica'), ('ESCUELAS', 'Facultades y Escuelas'), ('DESARROLLO_INSTITUCIONAL', 'Desarrollo Institucional'), ('NO', 'No')], default='NO', max_length=50, verbose_name='Subsistema UNAM')),
                ('ciudad', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nucleo.Ciudad')),
            ],
            options={
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='Distincion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=255, unique=True)),
                ('tipo', models.CharField(choices=[('PREMIO', 'Premio'), ('DISTINCION', 'Distinción'), ('RECONOCIMIENTO', 'Reconocimiento'), ('MEDALLA', 'Medalla'), ('GUGGENHEIM', 'Beca Guggenheim'), ('HONORIS_CAUSA', 'Doctorado Honoris Causa'), ('OTRO', 'Otro')], max_length=30)),
                ('descripcion', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': 'Distinción',
                'verbose_name_plural': 'Distinciones',
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='Editorial',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=255, unique=True)),
                ('descripcion', models.TextField(blank=True)),
                ('ciudad', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nucleo.Ciudad')),
            ],
            options={
                'verbose_name_plural': 'Editoriales',
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='Estado',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=200)),
            ],
            options={
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='Evento',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=255)),
                ('descripcion', models.TextField(blank=True)),
                ('fecha_inicio', models.DateField()),
                ('fecha_fin', models.DateField()),
                ('ubicacion', models.TextField(blank=True)),
                ('dependencias', models.ManyToManyField(related_name='evento_dependencias', to='nucleo.Dependencia')),
            ],
            options={
                'ordering': ['fecha_inicio', 'nombre'],
            },
        ),
        migrations.CreateModel(
            name='Financiamiento',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=255, unique=True)),
                ('tipo_financiamiento', models.CharField(choices=[('', '-------'), ('UNAM', (('', '-------'), ('ASIGNADO', 'Presupuesto asignado a la entidad'), ('CONCURSADO', 'Presupuesto concursado por la entidad'), ('AUTOGENERADO', 'Recursos autogenerados (extraordinarios)'), ('OTRO', 'Otro'))), ('Externo', (('', '-------'), ('ESTATAL', 'Gubernamental Estatal'), ('FEDERAL', 'Gubernamental Federal'), ('LUCRATIVO', 'Privado lucrativo'), ('NO_LUCRATIVO', 'Privado no lucrativo'), ('EXTRANJERO', 'Recursos del extranjero')))], max_length=80)),
                ('descripcion', models.TextField(blank=True)),
                ('dependencias_financiamiento', models.ManyToManyField(related_name='financiamiento_dependencias_financiamiento', to='nucleo.Dependencia')),
            ],
            options={
                'verbose_name': 'Financiamiento',
                'verbose_name_plural': 'Financiamientos',
            },
        ),
        migrations.CreateModel(
            name='ImpactoSocial',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=255, unique=True)),
                ('descripcion', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': 'Impacto social',
                'verbose_name_plural': 'Impactos sociales',
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='Indice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=255, unique=True)),
                ('descripcion', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Institucion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=255, unique=True)),
                ('descripcion', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': 'Institución',
                'verbose_name_plural': 'Instituciones',
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='Libro',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=255, unique=True)),
                ('descripcion', models.TextField(blank=True)),
                ('tipo', models.CharField(choices=[('INVESTIGACION', 'Investigación'), ('DIVULGACION', 'Divulgación')], max_length=50)),
                ('status', models.CharField(choices=[('', '-------'), ('ENVIADO', 'Enviado'), ('ACEPTADO', 'Aceptado'), ('EN_PRENSA', 'En prensa'), ('PUBLICADO', 'Publicado'), ('OTRO', 'Otro')], max_length=20)),
                ('fecha', models.DateField(blank=True, null=True)),
                ('numero_edicion', models.PositiveIntegerField(default=1)),
                ('numero_paginas', models.PositiveIntegerField(default=0)),
                ('volumen', models.CharField(blank=True, max_length=255)),
                ('isbn', models.SlugField(blank=True, max_length=30)),
                ('url', models.URLField(blank=True)),
                ('ciudad', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nucleo.Ciudad')),
                ('coleccion', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='nucleo.Coleccion')),
                ('coordinadores', models.ManyToManyField(blank=True, related_name='libro_coordinadores', to=settings.AUTH_USER_MODEL)),
                ('editores', models.ManyToManyField(blank=True, related_name='libro_editores', to=settings.AUTH_USER_MODEL)),
                ('editorial', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nucleo.Editorial')),
                ('estado', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nucleo.Estado')),
            ],
            options={
                'ordering': ['nombre'],
                'get_latest_by': ['fecha', 'nombre_libro', 'editorial'],
            },
        ),
        migrations.CreateModel(
            name='MedioDivulgacion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_medio', models.CharField(max_length=255, unique=True)),
                ('descripcion', models.TextField(blank=True)),
                ('tipo', models.CharField(choices=[('PERIODICO', 'Periódico'), ('RADIO', 'Radio'), ('TV', 'Televisión'), ('INTERNET', 'Internet'), ('OTRO', 'Otro')], max_length=20)),
                ('canal', models.CharField(max_length=255)),
                ('ciudad', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nucleo.Ciudad')),
            ],
            options={
                'verbose_name': 'Medio de difusión para divulgación',
                'verbose_name_plural': 'Medios de difusión para divulgación',
                'ordering': ['nombre_medio'],
            },
        ),
        migrations.CreateModel(
            name='Memoria',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=255, unique=True)),
                ('descripcion', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Metodologia',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=255, unique=True)),
                ('descripcion', models.TextField(blank=True)),
            ],
            options={
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='Nombramiento',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=255, unique=True)),
                ('clave', models.CharField(max_length=20, unique=True)),
                ('descripcion', models.TextField(blank=True)),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Pais',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=60, unique=True)),
                ('nombre_extendido', models.CharField(max_length=200, unique=True)),
                ('codigo', models.SlugField(max_length=2, unique=True)),
            ],
            options={
                'verbose_name': 'País',
                'verbose_name_plural': 'Paises',
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='ProblemaNacionalConacyt',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=200, unique=True)),
                ('descripcion', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': ['Problemática Nacional CONACYT'],
                'verbose_name_plural': ['Problemáticas Nacionales CONACYT'],
            },
        ),
        migrations.CreateModel(
            name='ProgramaDoctorado',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=255, unique=True)),
                ('descripcion', models.TextField(blank=True)),
                ('area_conocimiento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nucleo.AreaConocimiento', verbose_name='Área de conocimiento')),
            ],
            options={
                'verbose_name': 'Programa de doctorado',
                'verbose_name_plural': 'Programas de doctorado',
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='ProgramaLicenciatura',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=255, unique=True)),
                ('descripcion', models.TextField(blank=True)),
                ('area_conocimiento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nucleo.AreaConocimiento', verbose_name='Área de conocimiento')),
            ],
            options={
                'verbose_name': 'Programa de licenciatura',
                'verbose_name_plural': 'Programas de licenciatura',
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='ProgramaMaestria',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=255, unique=True)),
                ('descripcion', models.TextField(blank=True)),
                ('area_conocimiento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nucleo.AreaConocimiento', verbose_name='Área de conocimiento')),
            ],
            options={
                'verbose_name': 'Programa de maestria',
                'verbose_name_plural': 'Programas de maestria',
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='Proyecto',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=255, unique=True)),
                ('descripcion', models.TextField(blank=True)),
                ('tipo', models.CharField(choices=[('INVESTIGACION', 'Investigación'), ('OTRO', 'Otro')], max_length=50)),
                ('es_permanente', models.BooleanField(default=False)),
                ('fecha_inicio', models.DateField()),
                ('fecha_fin', models.DateField()),
                ('status', models.CharField(choices=[('', '-------'), ('NUEVO', 'Nuevo'), ('EN_PROCESO', 'En proceso'), ('CONCLUIDO', 'Concluído'), ('OTRO', 'Otro')], max_length=30)),
                ('clasificacion', models.CharField(choices=[('', '-------'), ('BASICO', 'Básico'), ('APLICADO', 'Aplicado'), ('DESARROLLO_TECNOLOGICO', 'Desarrollo tecnológico'), ('INNOVACION', 'Innovación'), ('INVESTIGACION_FRONTERA', 'Investigación de frontera'), ('OTRA', 'Otra')], max_length=30)),
                ('organizacion', models.CharField(choices=[('', '-------'), ('INDIVIDUAL', 'Individual'), ('COLECTIVO', 'Colectivo')], max_length=30)),
                ('modalidad', models.CharField(choices=[('', '-------'), ('DISCIPLINARIO', 'Disciplinario'), ('MULTIDISCIPLINARIO', 'Multidisciplinario'), ('INTERDISCIPLINARIO', 'Interisciplinario'), ('TRANSDISCIPLINARIO', 'Transdisciplinario'), ('OTRA', 'Otra')], max_length=30)),
                ('tematica_genero', models.BooleanField(default=False)),
                ('descripcion_problema_nacional_conacyt', models.TextField(blank=True)),
                ('alumnos_doctorado', models.ManyToManyField(blank=True, related_name='proyecto_alumnos_doctorado', to=settings.AUTH_USER_MODEL)),
                ('alumnos_licenciatura', models.ManyToManyField(blank=True, related_name='proyecto_alumnos_licenciatura', to=settings.AUTH_USER_MODEL)),
                ('alumnos_maestria', models.ManyToManyField(blank=True, related_name='proyecto_alumnos_maestria', to=settings.AUTH_USER_MODEL)),
                ('dependencias', models.ManyToManyField(blank=True, related_name='proyecto_dependencias', to='nucleo.Dependencia')),
                ('especialidades', models.ManyToManyField(blank=True, related_name='proyecto_especialidades', to='nucleo.AreaEspecialidad')),
                ('financiamientos', models.ManyToManyField(blank=True, to='nucleo.Financiamiento')),
                ('impactos_sociales', models.ManyToManyField(blank=True, related_name='proyecto_impactos_sociales', to='nucleo.ImpactoSocial')),
                ('metodologias', models.ManyToManyField(blank=True, related_name='proyecto_metodologias', to='nucleo.Metodologia')),
                ('participantes', models.ManyToManyField(blank=True, related_name='proyecto_participantes', to=settings.AUTH_USER_MODEL)),
                ('problema_nacional_conacyt', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='nucleo.ProblemaNacionalConacyt')),
                ('tecnicos', models.ManyToManyField(blank=True, related_name='proyecto_impactos_tecnicos', to=settings.AUTH_USER_MODEL)),
                ('usuarios', models.ManyToManyField(related_name='proyecto_responsables', to=settings.AUTH_USER_MODEL, verbose_name='Responsables')),
            ],
            options={
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='Reconocimiento',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=255, unique=True)),
                ('descripcion', models.TextField(blank=True)),
            ],
            options={
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='Revista',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=255, unique=True)),
                ('nombre_abreviado_wos', models.CharField(blank=True, max_length=255, null=True)),
                ('descripcion', models.TextField(blank=True)),
                ('factor_impacto', models.DecimalField(blank=True, decimal_places=3, max_digits=6, null=True)),
                ('url', models.URLField(blank=True)),
                ('pais', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nucleo.Pais')),
            ],
            options={
                'ordering': ['nombre'],
                'get_latest_by': ['fecha', 'nombre_revista', 'editorial'],
            },
        ),
        migrations.CreateModel(
            name='TipoEvento',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100, unique=True)),
                ('descripcion', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': 'Tipo de evento',
                'verbose_name_plural': 'Tipos de eventos',
            },
        ),
        migrations.CreateModel(
            name='ZonaPais',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=60, unique=True)),
            ],
            options={
                'verbose_name': 'Zona de paises',
                'verbose_name_plural': 'Zonas de paises',
                'ordering': ['nombre'],
            },
        ),
        migrations.AddField(
            model_name='pais',
            name='zona',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nucleo.ZonaPais'),
        ),
        migrations.AddField(
            model_name='libro',
            name='pais',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nucleo.Pais'),
        ),
        migrations.AddField(
            model_name='libro',
            name='usuarios',
            field=sortedm2m.fields.SortedManyToManyField(help_text=None, related_name='libro_autores', to=settings.AUTH_USER_MODEL, verbose_name='Autores'),
        ),
        migrations.AddField(
            model_name='institucion',
            name='pais',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nucleo.Pais'),
        ),
        migrations.AddField(
            model_name='evento',
            name='tipo',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nucleo.TipoEvento'),
        ),
        migrations.AddField(
            model_name='estado',
            name='pais',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nucleo.Pais'),
        ),
        migrations.AddField(
            model_name='editorial',
            name='estado',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nucleo.Estado'),
        ),
        migrations.AddField(
            model_name='editorial',
            name='pais',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nucleo.Pais'),
        ),
        migrations.AddField(
            model_name='dependencia',
            name='institucion',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nucleo.Institucion'),
        ),
        migrations.AddField(
            model_name='departamento',
            name='dependencia',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nucleo.Dependencia'),
        ),
        migrations.AddField(
            model_name='ciudad',
            name='estado',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nucleo.Estado'),
        ),
        migrations.AlterUniqueTogether(
            name='cargo',
            unique_together=set([('nombre', 'tipo_cargo')]),
        ),
        migrations.AddField(
            model_name='user',
            name='ciudad',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nucleo.Ciudad'),
        ),
        migrations.AddField(
            model_name='user',
            name='estado',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nucleo.Estado'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='pais',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_pais', to='nucleo.Pais'),
        ),
        migrations.AddField(
            model_name='user',
            name='pais_origen',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='user_pais_origen', to='nucleo.Pais', verbose_name='País de origen'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
        migrations.AlterUniqueTogether(
            name='mediodivulgacion',
            unique_together=set([('canal', 'nombre_medio')]),
        ),
        migrations.AlterUniqueTogether(
            name='evento',
            unique_together=set([('fecha_inicio', 'nombre')]),
        ),
        migrations.AlterUniqueTogether(
            name='estado',
            unique_together=set([('nombre', 'pais')]),
        ),
        migrations.AlterUniqueTogether(
            name='dependencia',
            unique_together=set([('nombre', 'institucion')]),
        ),
        migrations.AlterUniqueTogether(
            name='departamento',
            unique_together=set([('nombre', 'dependencia')]),
        ),
        migrations.AlterUniqueTogether(
            name='ciudad',
            unique_together=set([('nombre', 'estado')]),
        ),
    ]
